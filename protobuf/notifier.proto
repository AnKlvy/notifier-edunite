syntax = "proto3";

package notify;

option go_package = "github.com/AnKlvy/notify-service/protobuf/gen_notifier";

// Сообщение для отправки уведомлений
message Notification {
  string user_id = 1;             // ID пользователя
  string channel = 2;             // Канал (email, fcm, telegram)
  string message = 3;             // Сообщение
  string subject = 4;             // Тема уведомления для email
}

// Запрос на подписку пользователя на канал уведомлений
message SubscribeRequest {
  string user_id = 1;             // ID пользователя
  string channel = 2;             // Канал (email, fcm, telegram)
  string value = 3;               // Токен или email
  string metadata = 4;            // Метаданные (например, устройство или статус)
}

// Запрос на отписку пользователя от канала
message UnsubscribeRequest {
  string user_id = 1;             // ID пользователя
  string channel = 2;             // Канал
}

// Запрос на отправку уведомления
message SendNotificationRequest {
  string user_id = 1;             // ID пользователя
  string message = 2;             // Сообщение
  string channel = 3;             // Канал (email, fcm, telegram)
}

// Ответ на запрос отправки уведомления
message SendNotificationResponse {
  bool success = 1;               // Успешно ли отправлено
  string error_message = 2;       // Сообщение об ошибке (если есть)
}

// Уведомление по каналу
message NotificationChannel {
  string user_id = 1;             // ID пользователя
  string channel = 2;             // Канал (email, fcm, telegram)
  string value = 3;               // Значение канала (например, токен или email)
  string metadata = 4;            // Дополнительные данные
}

// Ответ на запрос получения всех каналов для пользователя
message GetUserChannelsResponse {
  repeated NotificationChannel channels = 1; // Список каналов
}

// Сертификат для подключения
service NotificationService {
  // Подписка на уведомления
  rpc Subscribe(SubscribeRequest) returns (SendNotificationResponse);

  // Отписка от уведомлений
  rpc Unsubscribe(UnsubscribeRequest) returns (SendNotificationResponse);

  // Отправка уведомления
  rpc SendNotification(SendNotificationRequest) returns (SendNotificationResponse);

  // Получение каналов уведомлений пользователя
  rpc GetUserChannels(GetUserChannelsRequest) returns (GetUserChannelsResponse);
}

// Запрос для получения всех каналов
message GetUserChannelsRequest {
  string user_id = 1;  // ID пользователя
}
